dnl Process this file with autoconf to produce a configure script.

dnl set version
m4_define([glimmer_tests_major_version], [0])
m4_define([glimmer_tests_minor_version], [5])
m4_define([glimmer_tests_version],
	[glimmer_tests_major_version.glimmer_tests_minor_version])

AC_INIT([glimmer-tests],[glimmer_tests_version],[glimmer-discuss@forge.nesc.ac.uk])
AM_INIT_AUTOMAKE

GLIMMER_TESTS_MAJOR_VERSION=glimmer_tests_major_version
GLIMMER_TESTS_MINOR_VERSION=glimmer_tests_minor_version
GLIMMER_TESTS_VERSION=glimmer_tests_version
AC_SUBST(GLIMMER_TESTS_MAJOR_VERSION)
AC_SUBST(GLIMMER_TESTS_MINOR_VERSION)
AC_SUBST(GLIMMER_TESTS_VERSION)

min_glimmer_version=0.5.3

dnl checking for glimmer prefix
AM_PATH_GLIMMER([$min_glimmer_version])
if test x$GLIMMER_PREFIX = x ;then
  AC_MSG_ERROR([Could not find glimmer])
fi

FCFLAGS="$CFLAGS $GLIMMER_CFLAGS"
LIBS="$GLIMMER_LIBS $LIBS"

dnl Checking for python
AM_PATH_PYTHON([2.3],,[AC_MSG_RESULT(need at least python 2.3)])

dnl checking if we should do the graphics as well
AC_MSG_CHECKING([whether we should build graphics])
AC_ARG_ENABLE(graphics, AS_HELP_STRING([--enable-graphics],[Run PyCF scripts]),
[case "${enableval}" in
 yes)  AC_MSG_RESULT([yes]);;	
 no)   AC_MSG_RESULT([no]);;
 *) AC_MSG_ERROR(bad value ${enableval} for --enable-graphics) ;;
esac],[AC_MSG_RESULT([no])])
AM_CONDITIONAL([BUILD_GRAPHICS], [test "$enable_graphics" == "yes"])

dnl checking if the RSL data base is present
AC_CHECK_FILE($GLIMMER_PREFIX/share/PyCF/rsl.db,have_rsl_db="yes",have_rsl_db="no")
AM_CONDITIONAL([HAVE_RSL_DB], [test "$have_rsl_db" == "yes"])

AC_CONFIG_FILES([ \
Makefile \
EISMINT-1/Makefile \
EISMINT-2/Makefile \
lin-non_lin/Makefile \
eis/Makefile \
isos/Makefile \
PyCF/Makefile \
benchmarks/Makefile \
])
AC_OUTPUT()
